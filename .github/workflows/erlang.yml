name: Erlang CI

on: [push]

jobs:

  test:
    runs-on: ubuntu-latest
    container:
      image: erlang:25

    steps:
    - uses: actions/checkout@v1

    - uses: actions/cache@v2
      with:
        path: |
          ~/.cache/rebar3
          _build
        key: ${{ runner.os }}-erlang-${{ env.OTP_VERSION }}-${{ hashFiles('**/*rebar.lock') }}
        restore-keys: |
          ${{ runner.os }}-erlang-${{ env.OTP_VERSION }}-

    - name: Compile
      run: make compile
      env:
        GIT_SSH_COMMAND: "ssh -o StrictHostKeyChecking=no"
    - name: Run tests
      env:
        COVER: "1"
      run: |
        make test

        # Covert coverage data to XML
        mkdir -p cover
        ./bin/covertool -cover _build/test/cover/eunit.coverdata -output cover/cover.eunit.xml


    - name: Upload eunit test coverage data to CodeCov
      uses: codecov/codecov-action@v1
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        name: eunit
        file: "./cover/cover.eunit.xml"

  lint:
    runs-on: ubuntu-latest
    container:
      image: erlang:25

    steps:
    - uses: actions/checkout@v1

    - uses: actions/cache@v2
      with:
        path: |
          ~/.cache/rebar3
          _build
        key: ${{ runner.os }}-erlang-${{ env.OTP_VERSION }}-${{ hashFiles('**/*rebar.lock') }}
        restore-keys: |
          ${{ runner.os }}-erlang-${{ env.OTP_VERSION }}-

    - name: Compile
      run: make compile
      env:
        GIT_SSH_COMMAND: "ssh -o StrictHostKeyChecking=no"

    - name: erlfmt check
      run: make erlfmt_check

    - name: Dialyze
      run: make dialyze
